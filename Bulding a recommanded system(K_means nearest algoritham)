import pandas as pd
from scipy.sparse import csc_matrix
from sklearn.neighbors import NearestNeighbors
from fuzzywuzzy import process
import matplotlib.pyplot as plt
import seaborn as sns



movies = "movies.csv"
ratings = "ratings.csv"

df_movies = pd.read_csv(movies,
                        usecols = ["movieId", "title"],
                        dtype = {"movieId":"int32","title":"str"})
df_ratings = pd.read_csv(ratings,
                         usecols=["userId", "movieId", "rating"],
                         dtype = {"userId":"int32","movieId":"int32","rating":"float32"})

print(df_movies.head())
print(df_ratings.head())

null_values = df_ratings.isna()
print(null_values)
df_ratings.dropna(axis=0, how='any', thresh=None, subset=None, inplace=False)



print(df_movies.describe())
print(df_ratings.describe())



movies_users = df_ratings.pivot(index="movieId",columns = "userId",values = 'rating').fillna(0)
mat_movies_users = csc_matrix(movies_users.values)
sns.heatmap(movies_users, linecolor="blue")
plt.show()

model_knn = NearestNeighbors(metric="cosine", algorithm="brute", n_neighbors=20)
print(model_knn)
print(model_knn.fit(mat_movies_users))



def recommender(movie_name, data, model, n_recommendations):
    model.fit(data)
    idx = process.extractOne(movie_name, df_movies['title'])[2]
    print('movie selected:', df_movies['title'][idx],'index:',idx)
    print('Seraching for recommendations....')
    distances, indices = model.kneighbors(data[idx], n_neighbors=n_recommendations)
    print(distances, indices)
    for i in indices:
        plt.scatter(distances,indices)
        print(df_movies['title'][i].where(i!=idx))
        plt.show()

recommender('iron man', mat_movies_users, model_knn, 20)
